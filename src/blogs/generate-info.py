import glob
import os
import shutil

os.chdir(os.path.dirname(__file__))
with open("blog-info.ts", "w") as f:
    f.write("// This file is generated by generate-info.py. Do not edit this file directly. */\n")
    f.write("import type { StaticImageData } from 'next/image';\n")
    paths = glob.glob("./**/*.png", recursive=True)
    paths = [path.replace("\\", "/") for path in paths]
    paths.sort()
    for i, path in enumerate(paths):
        f.write(f'import Image{i} from "{path}";\n')
    f.write("export const blogImages: { [key: string]: StaticImageData } = {\n")
    for i, path in enumerate(paths):
        f.write(f'    "{path[2:]}": Image{i},\n')
    f.write("};\n")
    f.write("export const blogPaths: string[] = [\n")
    for rd in os.listdir("./"):
        if not os.path.isdir(rd):
            continue
        for idx in os.listdir("./" + rd):
            f.write(f'    "{rd}/{idx}",\n')
    f.write("];\n")
if os.path.exists("../../public/blog-resources"):
    shutil.rmtree("../../public/blog-resources")
for path in glob.glob("./**/*", recursive=True):
    if not os.path.isfile(path) or path.endswith(".png") or path.endswith(".md") or path.endswith(".ts") or path.endswith(".tsx") or path.endswith(".py"):
        continue
    dst = os.path.join("../../public/blog-resources", path)
    os.makedirs(os.path.dirname(dst), exist_ok=True)
    shutil.copy(path, dst)
